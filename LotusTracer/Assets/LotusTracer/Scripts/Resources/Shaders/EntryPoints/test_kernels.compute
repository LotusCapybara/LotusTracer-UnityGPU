#pragma target 6.0

#pragma kernel Kernel_TestRandom0to1
#pragma kernel Kernel_TestRandomMin1to1

#pragma kernel Kernel_TestSampleCosineWeighted

#include "../constants.cginc"
#include "../tracingTypes.cginc"
#include "../Functions/common.cginc"
#include "../Functions/post_processing.cginc"
#include "../Functions/fresnel.cginc"
#include "../BRDF/bsdf_functions.cginc"
#include "../BRDF/BxDF.cginc"


RWStructuredBuffer<float> _Randoms;

RWStructuredBuffer<float3> _SampleDirections0;
RWStructuredBuffer<float3> _SampleDirections1;
RWStructuredBuffer<float3> _SampleDirections2;

int _QtySamples;
float3 _UpDirection;
int _SingleRandom;

[numthreads(1,1,1)]
void Kernel_TestRandom0to1 (uint3 id : SV_DispatchThreadID)
{
    const int index = id.x;
    uint randState = id.x +  index * 1371;

    _Randoms[index]  = GetRandom0to1(randState); 
}

[numthreads(1,1,1)]
void Kernel_TestRandomMin1to1 (uint3 id : SV_DispatchThreadID)
{
    const int index = id.x;
    uint randState = id.x +  index * 1371 ;

    _Randoms[index]  = GetRandomMin1to1(randState); 
}

[numthreads(1,1,1)]
void Kernel_TestSampleCosineWeighted (uint3 id : SV_DispatchThreadID)
{
    uint rand = _SingleRandom + id;
    
    for(int i = 0; i < _QtySamples; i++)
    {
        _SampleDirections0[i] = RandomDirectionInHemisphereCosWeighted(rand);
        
        // _SampleDirections1[i] = ToWorld(_UpDirection, _SampleDirections0[i]);
        //
        // _SampleDirections2[i] = ToLocal(_UpDirection, _SampleDirections1[i]);
    }
}

